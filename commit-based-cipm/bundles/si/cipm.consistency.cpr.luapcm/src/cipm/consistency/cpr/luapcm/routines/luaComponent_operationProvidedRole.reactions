
import "http://www.xtext.org/lua/Lua" as lua
import "http://palladiosimulator.org/PalladioComponentModel/5.2" as pcm

reactions: luaComponent_operationProvidedRole
in reaction to changes in lua
execute actions in pcm

routine createOperationProvidedRoleForLuaComponent(lua::Component luaComponent) {
	match {
		require absence of pcm::OperationProvidedRole corresponding to luaComponent
		val basicComponent = retrieve pcm::BasicComponent corresponding to luaComponent
		val operationInterface = retrieve pcm::OperationInterface corresponding to luaComponent
	}
	create {
		val operationProvidedRole = new pcm::OperationProvidedRole
	}
	update {
		operationProvidedRole.providedInterface__OperationProvidedRole = operationInterface
		operationProvidedRole.providingEntity_ProvidedRole = basicComponent
		operationProvidedRole.entityName = "role_providing_" + operationInterface.entityName

		basicComponent.providedRoles_InterfaceProvidingEntity += operationProvidedRole

		addCorrespondenceBetween(operationProvidedRole, luaComponent)
	}
}

routine removeOperationProvidedRoleForLuaComponent(lua::Component luaComponent) {
	match {
		val operationProvidedRole = retrieve pcm::OperationProvidedRole corresponding to luaComponent
		val basicComponent = retrieve pcm::BasicComponent corresponding to luaComponent
	}
	update {
		removeCorrespondenceBetween(luaComponent, operationProvidedRole)
		basicComponent.providedRoles_InterfaceProvidingEntity -= operationProvidedRole
		operationProvidedRole.removeObject
	}
}

//routine checkRemovalOfOperationProvidedRole(lua::NamedChunk namedChunk) {
//	match {
//		val interfaze = retrieve pcm::OperationInterface corresponding to namedChunk
//		val basicCom = retrieve pcm::BasicComponent corresponding to namedChunk
//		val opRoles = retrieve many pcm::OperationProvidedRole corresponding to namedChunk
//	}
//	update {
//		val role = opRoles.findFirst [
//			it.providedInterface__OperationProvidedRole == interfaze && it.providingEntity_ProvidedRole == basicCom
//		]
//		if (role !== null) {
//			removeOperationProvidedRole(role)
//		}
//	}
//}


// Add 'implements'.
//reaction AddedTypeReference {
//	after element java::TypeReference inserted in java::Class[implements]
//	with newValue instanceof NamespaceClassifierReference || newValue instanceof ClassifierReference
//	call {
//		createOrFindOperationProvidedRoleFromTypeReference(newValue)
//	}
//}

// Remove 'implements'.
//reaction RemovedTypeReference {
//	after element java::TypeReference removed from java::Class[implements]
//	with oldValue instanceof NamespaceClassifierReference || oldValue instanceof ClassifierReference
//	call {
//		checkRemovalOfOperationProvidedRole(affectedEObject, getNormalizedClassifierFromTypeReference(oldValue))
//	}
//}

//routine createOrFindOperationProvidedRoleFromTypeReference(java::TypeReference typeReference) {
//	update {
//		val javaClass = typeReference.eContainer as Class
//		var javaInterfaceClassifier = getNormalizedClassifierFromTypeReference(typeReference)
//		createOrFindOperationProvidedRole(javaInterfaceClassifier, javaClass)
//	}
//}