import cipm.consistency.cpr.luapcm.Config
import org.eclipse.xtext.EcoreUtil2
import org.xtext.lua.lua.Block
import org.xtext.lua.lua.Statement

import "http://www.xtext.org/lua/Lua" as lua
import "http://palladiosimulator.org/PalladioComponentModel/5.2" as pcm

reactions: statement_serveCall
in reaction to changes in lua
execute actions in pcm

import block_rdBehaviour
import statement_actions
import statementFunctionDeclaration_operationSignature

routine createSeffForDeclaration(lua::Statement_Function_Declaration declaration) {
	match {
		val rdSeff = retrieve optional pcm::ResourceDemandingSEFF corresponding to declaration
		val operationSignature = retrieve optional pcm::OperationSignature corresponding to declaration
	}
	update {
		if (!Config.isTrackServeCallsEnabled) {
			return
		}

		if (rdSeff.present) {
			logger.debug("SEFF for new serve call was already present for: " + declaration.name)
			return
		}
		logger.info("Catching up on SEFF creation for " + declaration.name)

		// this is needed because the declaration and the seff were added in separate commits
		if (!operationSignature.present) {
			createOperationSignatureForStatementFunctionDeclaration(declaration)
		}

		// create RD behaviours for all blocks
		for (block : EcoreUtil2.getAllContentsOfType(declaration, Block)) {
			addedBlock(block)
			
			for (statement : block.statements) {
				createActionsForStatement(statement, block)
			}
		}

	}
}

routine removeSeffForDeclaration(lua::Statement_Function_Declaration declaration) {
	match {
		val rdSeff = retrieve optional pcm::ResourceDemandingSEFF corresponding to declaration
	}
	update {
		if (!Config.isTrackServeCallsEnabled) {
			return
		}

		if (!rdSeff.present) {
			logger.warn("Unable to remove non-existent RDSEFF")
			return
		}
		logger.info("Removing SEFF of function because its serve call was deleted: " + declaration.name)

		removeOperationSignatureForStatementFunctionDeclaration(declaration)

		for (eObj : EcoreUtil2.getAllNonDerivedContents(declaration).toIterable) {
			if (eObj instanceof Block) {
				removedSeffBlock(eObj)
			} else if (eObj instanceof Statement) {
				removeActionsForStatement(eObj, EcoreUtil2.getContainerOfType(eObj, Block))
			}
		}
	}
}
