import cipm.consistency.cpr.luapcm.internal.InternalUtils
import org.palladiosimulator.pcm.repository.RepositoryPackage

import "http://www.xtext.org/lua/Lua" as lua
import "http://palladiosimulator.org/PalladioComponentModel/5.2" as pcm

reactions: component_basicComponent
in reaction to changes in lua
execute actions in pcm

routine assertBasicComponentExistenceForChunk(lua::Chunk chunk) {
	match {
		require absence of pcm::BasicComponent corresponding to chunk
	}
	update {
		val luaComponent = InternalUtils.getComponentOfChunk(chunk)
		assertBasicComponentExistenceForLuaComponent(luaComponent)
	}
}

routine assertBasicComponentExistenceForLuaComponent(lua::Component component) {
	match {
		require absence of pcm::BasicComponent corresponding to component
	}
	update {
		createBasicComponent(component)
	}
}

routine createBasicComponent(lua::Component component) {
	match {
		val pcmRepository = retrieve pcm::Repository corresponding to RepositoryPackage.Literals.REPOSITORY
	}
	create {
		val pcmBasicComponent = new pcm::BasicComponent
	}
	update {
		pcmBasicComponent.entityName = component.name
//		pcmBasicComponent.providedRoles_InterfaceProvidingEntity += null
		
		pcmRepository.components__Repository += pcmBasicComponent

		addCorrespondenceBetween(pcmBasicComponent, component)
	}
}


routine checkBasicComponentRemoval(lua::Chunk chunk) {
	match {
		val pcmComponent = retrieve pcm::BasicComponent corresponding to chunk
		val otherChunks = retrieve many lua::Chunk corresponding to pcmComponent
	}
	update {
		removeCorrespondenceBetween(chunk, pcmComponent)
		if (otherChunks.size == 1) {
			removeComponent(pcmComponent)
		}
	}
}

routine removeComponent(pcm::BasicComponent component) {
	update {
		component.removeObject
	}
}